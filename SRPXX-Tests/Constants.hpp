/*******************************************************************************
 * The MIT License (MIT)
 * 
 * Copyright (c) 2024 Jean-David Gadina - www.xs-labs.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 ******************************************************************************/

#ifndef SRPXX_TESTS_CONSTANTS_HPP
#define SRPXX_TESTS_CONSTANTS_HPP

#include <SRPXX.hpp>
#include <string>

namespace Constants
{
    inline std::string identity()
    {
        return "milford@cubicle.org";
    }
    
    inline std::string password()
    {
        return "1234";
    }
    
    inline SRP::BigNum a()
    {
        return
        {
            {
                0x71, 0x9C, 0xD0, 0x84, 0x80, 0x7E, 0x11, 0x81, 0x4F, 0x89, 0x63, 0x7B, 0x98, 0x44, 0xB2, 0x3C,
                0xA6, 0xCF, 0xC9, 0x56, 0xD0, 0xF7, 0x5F, 0xB6, 0x9D, 0x04, 0x82, 0x0D, 0x75, 0x84, 0x3A, 0xEB
            },
            SRP::BigNum::Endianness::BigEndian
        };
    }
    
    inline SRP::BigNum A()
    {
        return
        {
            {
                0x8E, 0x41, 0x51, 0xD3, 0xE6, 0xB1, 0x00, 0x95, 0x6E, 0x18, 0x84, 0x49, 0x61, 0xD5, 0xD0, 0x14,
                0xDA, 0x33, 0x08, 0xB7, 0x85, 0x18, 0xF4, 0x81, 0xCE, 0xB0, 0xEC, 0x12, 0xC3, 0x80, 0xB8, 0x69,
                0xB6, 0x41, 0x6D, 0xD9, 0x5C, 0xE5, 0x55, 0x55, 0x00, 0xA4, 0x24, 0x82, 0xA9, 0xFA, 0xC0, 0x2C,
                0x51, 0x98, 0xF6, 0xBA, 0xD7, 0x3C, 0x2A, 0xE1, 0xD5, 0x8D, 0x56, 0xE9, 0x94, 0x06, 0x2E, 0x88,
                0xCF, 0xAF, 0x4B, 0x4D, 0xA8, 0x85, 0x5A, 0x50, 0xCB, 0x66, 0xC2, 0x6D, 0x02, 0x94, 0xAC, 0x13,
                0x87, 0x28, 0xDC, 0x50, 0x0B, 0x2F, 0x4E, 0x79, 0xD0, 0xDA, 0x36, 0xA3, 0xBA, 0xD9, 0xB6, 0xCE,
                0xBC, 0x46, 0x45, 0x77, 0x64, 0xC2, 0xCE, 0xAE, 0xA5, 0x63, 0x3A, 0xD8, 0x8B, 0x84, 0x28, 0xAE,
                0x72, 0x03, 0x6B, 0xA1, 0x23, 0xC6, 0x17, 0x9B, 0xCD, 0xA4, 0xE9, 0x23, 0x92, 0x5B, 0xC9, 0x92,
                0x84, 0xC3, 0x35, 0x47, 0x2D, 0x7F, 0xC7, 0xA0, 0xFE, 0x75, 0xA9, 0x7B, 0xBA, 0x6F, 0x88, 0x23,
                0x22, 0xC0, 0xD5, 0x2C, 0xF5, 0xDE, 0x4B, 0x1A, 0xF0, 0x82, 0xF5, 0xC0, 0xAB, 0x0B, 0xC7, 0x11,
                0x7F, 0x16, 0x92, 0xBB, 0x3B, 0x4F, 0x25, 0x9D, 0xE8, 0xF6, 0x39, 0xC2, 0xE2, 0x4A, 0x97, 0xFD,
                0xEB, 0x34, 0xCC, 0x10, 0x66, 0x06, 0x82, 0x2D, 0xBB, 0x05, 0x8C, 0xEB, 0x75, 0xBD, 0xD2, 0x87,
                0x3D, 0x1A, 0x6C, 0x91, 0x4B, 0xE3, 0xC4, 0x33, 0xB6, 0x52, 0xE8, 0x7B, 0x63, 0x3B, 0x4D, 0x2F,
                0x12, 0xAB, 0xBE, 0xBD, 0xB6, 0x56, 0x8C, 0xB1, 0x42, 0x95, 0x76, 0x33, 0xAB, 0x25, 0x7C, 0xF0,
                0x53, 0x96, 0xD2, 0x80, 0xF7, 0x96, 0x6C, 0xF4, 0xE4, 0xE1, 0xD8, 0xE8, 0x3F, 0x79, 0x5E, 0xF8,
                0x59, 0xA5, 0xC6, 0x0A, 0xB1, 0x05, 0x41, 0x23, 0xE2, 0x36, 0xEE, 0x47, 0xC8, 0xD4, 0x63, 0x2C
            },
            SRP::BigNum::Endianness::BigEndian
        };
    }
    
    inline SRP::Client makeTestClient()
    {
        return { identity(), SRP::HashAlgorithm::SHA256, SRP::Client::GroupType::NG2048, a() };
    }
}

#endif /* SRPXX_TESTS_CONSTANTS_HPP */
